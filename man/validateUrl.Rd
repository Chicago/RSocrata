% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/validateURL.R
\name{validateUrl}
\alias{validateUrl}
\title{Check if the URL is a valid one and supported by RSocrata.}
\usage{
validateUrl(url = "")
}
\arguments{
\item{url}{- a string; character vector of length one}
}
\value{
a valid URL used for downloading data
}
\description{
Will convert a human-readable URL to a valid REST API call
supported by Socrata. It will accept a valid API URL if provided
by users and will also convert a human-readable URL to a valid API
URL. Will accept queries with optional API token as a separate
argument or will also accept API token in the URL query. Will
resolve conflicting API token by deferring to original URL.
}
\examples{
\dontrun{
validateUrl(url = "a.fake.url.being.tested") # Returns FALSE
validateUrl(url = "https://soda.demo.socrata.com/resource/4334-bgaj") # Returns FALSE
validateUrl(url = "https://soda.demo.socrata.com/resource/4334-bgaj.json") # Returns TRUE
validateUrl(url = "https://soda.demo.socrata.com/resource/4334-bgaj.csv") # Returns TRUE
validateUrl(url = "http://soda.demo.socrata.com/resource/4334-bgaj.json") # Returns TRUE
validateUrl(url = "http://soda.demo.socrata.com/resource/4334-bgaj.xml") # Returns TRUE
validateUrl(url = "https://data.cityofchicago.org/resource/6zsd-86xi.geojson") # Returns TRUE
validateUrl(url = "http://soda.demo.socrata.com/dataset/USGS-Earthquake-Reports/4334-bgaj.csv") # Returns TRUE
}
}
\author{
Tom Schenk Jr \email{tom.schenk@cityofchicago.org} et al.
}

